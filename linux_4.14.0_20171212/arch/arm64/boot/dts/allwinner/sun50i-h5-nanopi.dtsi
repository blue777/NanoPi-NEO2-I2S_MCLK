/*
 * Copyright (C) 2016 ARM Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun50i-h5.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/pinctrl/sun4i-a10.h>
#include <dt-bindings/thermal/thermal.h>

/ {
    aliases {
        serial0 = &uart0;
        serial1 = &uart1;
        serial2 = &uart2;
        serial3 = &uart3;
        i2c0 = &i2c0;
        i2c1 = &i2c1;
        i2c2 = &i2c2;
        spi0 = &spi0;
        spi1 = &spi1;
        pwm0 = &pwm;
        mmc0 = &mmc0;
        mmc2 = &mmc2;
        ethernet0 = &emac;
        i2s0 = &i2s0;
        pcm5102a = &pcm5102a;
        spidev0 = &spidev0;
        spiflash = &spiflash;
        pitft = &pitft;
        pitft_ts = &pitft_ts;
    };

    chosen {
        stdout-path = "serial0:115200n8";
    };

    connector {
        compatible = "hdmi-connector";
        type = "a";

        port {
            hdmi_con_in: endpoint {
                remote-endpoint = <&hdmi_out_con>;
            };
        };
    };

    leds {
        compatible = "gpio-leds";
        pinctrl-names = "default";
        pinctrl-0 = <&leds_npi>, <&leds_r_npi>;

        pwr {
            label = "nanopi:green:pwr";
            gpios = <&r_pio 0 10 GPIO_ACTIVE_HIGH>;
            default-state = "on";
        };

        status {
            label = "nanopi:blue:status";
            gpios = <&pio 0 10 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "heartbeat";
        };
    };

    r-gpio-keys {
        compatible = "gpio-keys";

        k1@0 {
            label = "k1";
            linux,code = <KEY_POWER>;
            gpios = <&r_pio 0 3 GPIO_ACTIVE_LOW>;
        };
    };

    reg_gmac_3v3: gmac-3v3 {
        compatible = "regulator-fixed";
        pinctrl-names = "default";
        pinctrl-0 = <&gmac_power_pin_nanopi>;
        regulator-name = "gmac-3v3";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
        startup-delay-us = <100000>;
        enable-active-high;
        gpio = <&pio 3 6 GPIO_ACTIVE_HIGH>;
    };

    reg_vcc3v3: vcc3v3 {
        compatible = "regulator-fixed";
        regulator-name = "vcc3v3";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
    };

    reg_usb0_vbus: usb0-vbus {
        compatible = "regulator-fixed";
        regulator-name = "usb0-vbus";
        regulator-min-microvolt = <5000000>;
        regulator-max-microvolt = <5000000>;
        enable-active-high;
        gpio = <&r_pio 0 2 GPIO_ACTIVE_HIGH>; /* PL2 */
        status = "okay";
    };

    pcm5102a: pcm5102a-codec {
        #sound-dai-cells = <0>;
        compatible = "ti,pcm5102a";
        status = "disabled";
    };
};

&ehci0 {
    status = "okay";
};

&ohci0 {
    status = "okay";
};

&ehci1 {
    status = "okay";
};

&ohci1 {
    status = "okay";
};

&ehci2 {
    status = "okay";
};

&ohci2 {
    status = "okay";
};

&ehci3 {
    status = "okay";
};

&ohci3 {
    status = "okay";
};

&mmc0 {
    pinctrl-names = "default";
    pinctrl-0 = <&mmc0_pins_a>, <&mmc0_cd_pin>;
    vmmc-supply = <&reg_vcc3v3>;
    bus-width = <4>;
    cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>; /* PF6 */
    boot_device = <0>;
    status = "okay";
};

&mmc2 {
    boot_device = <0>;
};

&pio {
    leds_npi: led_pins@0 {
        pins = "PA10";
        function = "gpio_out";
    };
    gmac_power_pin_nanopi: gmac_power_pin@0 {
        pins = "PD6";
        function = "gpio_out";
    };
    spi0_cs_pins: spi0_cs_pins {
        pins = "PC3", "PA6";
        function = "gpio_out";
    };
};

&r_pio {
    leds_r_npi: led_pins@0 {
        pins = "PL10";
        function = "gpio_out";
    };
    vdd_cpux_r_npi: regulator_pins@0 {
        allwinner,pins = "PL6";
        allwinner,function = "gpio_out";
        allwinner,drive = <SUN4I_PINCTRL_10_MA>;
        allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
    };
};

&uart0 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart0_pins_a>;
    status = "okay";
};

&uart1 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart1_pins>;
    status = "okay";
};

&uart2 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart2_pins>;
    status = "okay";
};

&uart3 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart3_pins>, <&uart3_rts_cts_pins>;
    status = "okay";
};

&i2c0 {
    status = "okay";
    rtc@68 {
        compatible = "dallas,ds1307";
        reg = <0x68>;
    };
};

&i2c1 {
    status = "okay";
};

&i2c2 {
    status = "okay";
};

&spi0 {
    /* needed to avoid dtc warning */
    #address-cells = <1>;
    #size-cells = <0>;

    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&spi0_pins &spi0_cs_pins>;
    cs-gpios = <&pio 2 3 GPIO_ACTIVE_HIGH>, <&pio 0 6 GPIO_ACTIVE_HIGH>;

    spidev0: spi@0 {
        compatible = "nanopi,spidev";
        reg = <0>;
        status = "okay";

        spi-max-frequency = <10000000>;
    };

    spiflash: spiflash@0 {
        #address-cells = <1>;
        #size-cells = <1>;
        compatible = "mxicy,mx25l12805d";
        reg = <0>;
        status = "disabled";

        spi-max-frequency = <50000000>;
        mode = <0>;

        partition@0 {
            reg = <0x0 0x1000000>;
            label = "spi-flash";
        };
    };

    pitft: pitft@0{
        compatible = "sitronix,st7789v";
        reg = <0>;
        status = "disabled";

        spi-max-frequency = <50000000>;
        rotate = <90>;
        fps = <33>;
        buswidth = <8>;
        dc-gpios = <&pio 0 1 GPIO_ACTIVE_HIGH>;     /* PA1 */
        reset-gpios = <&pio 6 11 GPIO_ACTIVE_HIGH>; /* PG11 */
        debug = <0x0>;
    };

    pitft_ts: pitft-ts@1 {
        compatible = "ti,ads7846";
        reg = <1>;
        status = "disabled";

        spi-max-frequency = <2000000>;
        interrupt-parent = <&pio>;
        interrupts = <6 9 IRQ_TYPE_EDGE_FALLING>;   /* PG9 / EINT9 */
        pendown-gpio = <&pio 6 9 GPIO_ACTIVE_LOW>;
        ti,swap-xy;
        ti,vref-delay-usecs = <1000>;
        ti,x-min = /bits/ 16 <100>;
        ti,x-max = /bits/ 16 <0xfff>;
        ti,y-min = /bits/ 16 <100>;
        ti,y-max = /bits/ 16 <0xfff>;
        ti,vref-mv = <3300>;
        ti,x-plate-ohms = /bits/ 16 <256>;
        ti,penirq-recheck-delay-usecs = <10>;
        ti,settle-delay-usec = /bits/ 16 <100>;
        ti,keep-vref-on = <1>;
        ti,pressure-max = /bits/ 16 <0xfff>;
        ti,debounce-max = <10>;
        ti,debounce-tol = <30>;
        ti,debounce-rep = <1>;
    };
};

&spi1 {
    // against uart3_rts_cts_pins, so disable
    status = "disable";
    spidev1: spi@1 {
        compatible = "nanopi,spidev";
        reg = <0>;
        spi-max-frequency = <10000000>;
    };
};

&usb_otg {
    // OTG is not stable.
    dr_mode = "host";
    status = "okay";
};

&usbphy {
    usb0_id_det-gpios = <&pio 6 12 GPIO_ACTIVE_HIGH>; /* PG12 */
    usb0_vbus-supply = <&reg_usb0_vbus>;
    status = "okay";
};

&de {
    status = "okay";
};

&hdmi {
    status = "okay";
};

&hdmi_out {
    hdmi_out_con: endpoint {
        remote-endpoint = <&hdmi_con_in>;
    };
};

&sound_hdmi {
    status = "okay";
};

&tcon0 {
    status = "okay";
};

&mixer0 {
    status = "okay";
};

&i2s0 {
    sound-dai = <&pcm5102a>;
    status = "disabled";
};

&i2s2 {
    status = "okay";
};

&emac {
    local-mac-address = [ 00 00 00 00 00 00 ];  
};

&codec {
    allwinner,audio-routing =
        "Line Out", "LINEOUT",
        "MIC1", "Mic",
        "Mic",  "MBIAS";
    status = "okay";
};

&pwm {
    pinctrl-names = "default";
    pinctrl-0 = <&pwm0_pins>;
    status = "disabled";
};

&ir {
    pinctrl-names = "default";
    pinctrl-0 = <&ir_pins_a>;
    status = "okay";
};